"""
Django settings for choir_site project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
import sys

LOGIN_URL = "/login/"

BASE_DIR = Path(__file__).resolve().parent.parent

# --- SECRET KEY ---
# Use environment variable in production
SECRET_KEY = os.environ.get(
    "DJANGO_SECRET_KEY",
    "django-insecure-!n=0x-9(2@sx9@i%^g9f#$sz8z%-t$%_)=s2)j^ox2&ghy@e#(",
)

# --- DEBUG ---
# Set via environment variable, default True for local development
DEBUG = os.environ.get("DEBUG", "True") == "True"

# --- ALLOWED HOSTS & CSRF ---
RENDER_DOMAIN = os.environ.get("RENDER_EXTERNAL_HOSTNAME")

if DEBUG:
    # Local development
    ALLOWED_HOSTS = ["localhost", "127.0.0.1"]
    CSRF_TRUSTED_ORIGINS = ["http://localhost:8000", "http://127.0.0.1:8000"]

    # Codespaces support (optional)
    codespace_name = os.environ.get("CODESPACE_NAME")
    if codespace_name:
        CSRF_TRUSTED_ORIGINS.append(f"https://{codespace_name}-8000.app.github.dev")

else:
    # Production (Render)
    if RENDER_DOMAIN:
        ALLOWED_HOSTS = [RENDER_DOMAIN]
        CSRF_TRUSTED_ORIGINS = [f"https://{RENDER_DOMAIN}"]
    else:
        # If no RENDER_DOMAIN, allow localhost for safe local testing
        ALLOWED_HOSTS = ["choirmusic.onrender.com", "127.0.0.1", "localhost"]
        CSRF_TRUSTED_ORIGINS = [
            "https://choirmusic.onrender.com",
            "http://127.0.0.1:8000",
        ]


# --- Applications ---
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "music",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# Disable CSRF in Codespaces
if "runserver" in sys.argv and os.environ.get("CODESPACE_NAME"):
    MIDDLEWARE = [
        m for m in MIDDLEWARE if m != "django.middleware.csrf.CsrfViewMiddleware"
    ]

ROOT_URLCONF = "choir_site.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "choir_site.wsgi.application"

# --- DATABASE ---
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# --- PASSWORD VALIDATORS ---
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# --- INTERNATIONALIZATION ---
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# --- STATIC FILES ---
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"

# --- MEDIA FILES ---
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

# --- ADMIN & EMAIL ---
ADMINS = [("Niall", "niallpcarroll@gmail.com")]

EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST = "smtp.gmail.com"
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = "niallpcarroll@gmail.com"
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_HOST_PASSWORD")
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# --- DEFAULT AUTO FIELD ---
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
